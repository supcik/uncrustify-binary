name: Build binary

on: [push]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  UNC_VERSION: 0.72.0

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0
      - run: git checkout uncrustify-$UNC_VERSION
        working-directory: ./uncrustify
      - name: Build x86_64
        working-directory: ./uncrustify
        run: |
          mkdir build-x86_64
          cd build-x86_64
          cmake -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_BUILD_TYPE=Release ..
          make
      - name: Build arm64
        working-directory: ./uncrustify
        run: |
          mkdir build-arm64
          cd build-arm64
          cmake -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_BUILD_TYPE=Release ..
          make
      - name: Create universal binary
        run: >
          lipo -create 
          uncrustify/build-x86_64/uncrustify
          uncrustify/build-arm64/uncrustify 
          -output uncrustify-macos-universal-$UNC_VERSION
      - name: copy binaries
        run: |
          cp uncrustify/build-arm64/uncrustify uncrustify-macos-arm64-$UNC_VERSION
          cp uncrustify/build-x86_64/uncrustify uncrustify-macos-x86_64-$UNC_VERSION
      - name: save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: uncrustify-macos-$UNC_VERSION
          path: uncrustify-macos-*

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Retrieve binaries
        uses: actions/download-artifact@v3
        with:
          name: uncrustify-macos-$UNC_VERSION
          path: website/binaries
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: install jinja2
        run: pip install jinja2
      - name: build
        run: python build.py $UNC_VERSION
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'website'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
